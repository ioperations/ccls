name : build and test

on: push

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        build-type: ['sanity']
        runs-on: [ubuntu-20.04]
        # compiler: [g++-4.8, g++-5, g++-6, g++-7, g++-8, g++-9, g++-10, clang++-10, g++]
        libclang-version: [11]
        cxx-std: ['c++03', 'c++11', 'c++14', 'c++17', 'c++2a']
        separate-compilation: ['', '--enable-separate-compilation']
        optim-level: ['-O3']
        no-deprecated: ['']
        exclude:
          # Newer compilers don't run on ubuntu 18.04
          # Trim builds that use separate compilation
          # C++03 builds are always explicitly included

          - cxx-std: c++03
        include:
          #
          # Linux / g++-10 -std=c++2a / -O2 / standalone
          #
          - build-type: full
            runs-on: ubuntu-20.04
            libclang-version: 11
            cxx-std: c++2a
            optim-level: -O2
          #
          # Linux / g++-10 -std=c++17 / -O2 / boost 1.73
          #
          - build-type: full
            runs-on: ubuntu-20.04
            libclang-version: 11
            cxx-std: c++17
            optim-level: -O2
          #
          # Linux / g++-9 -std=c++14 / -O0 / standalone / separate compilation
          #
          - build-type: full
            runs-on: ubuntu-20.04
            libclang-version: 11
            cxx-std: c++14
            optim-level: -O0
          #
          # Linux / g++-6 / -O2 / standalone
          #
          - build-type: full
            runs-on: ubuntu-18.04
            libclang-version: 11
            cxx-std: c++14
            optim-level: -O2
    runs-on: ${{ matrix.runs-on }}
    env:
      CXX: clang++-${{ matrix.libclang-version }}
      CXXFLAGS: -std=${{ matrix.cxx-std }} ${{ matrix.optim-level }} -Wall -Wextra 
    steps:
    - uses: actions/checkout@v2
    - name: Install compiler
      if: startsWith(matrix.runs-on, 'ubuntu')
      run: |
        sudo apt install rapidjson-dev build-essential -y
        sudo apt-get install -y clang-${{ matrix.libclang-version }} libclang-${{ matrix.libclang-version }}-dev
    - name: Build
      if: startsWith(matrix.build-type, 'full')
      run: |
        mkdir build
        cd build
        cmake -DCMAKE_CXX_COMPILER=${CXX} ..
        make -j`nproc`


