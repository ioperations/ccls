name : build and test

on: push

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        runs-on: [ubuntu-20.04]
        build-type: ['full']
        libclang-version: [11]
        cxx-std: ['c++03', 'c++11', 'c++14', 'c++17', 'c++2a']
        optim-level: ['-O3']
        include:
          #
          # Linux / g++-10 -std=c++2a / -O2 / standalone
          #
          - build-type: full
            runs-on: ubuntu-20.04
            libclang-version: 11
            cxx-std: c++2a
            optim-level: -O2
          #
          # Linux / g++-10 -std=c++17 / -O2 / boost 1.73
          #
          - build-type: full
            runs-on: ubuntu-20.04
            libclang-version: 11
            cxx-std: c++17
            optim-level: -O2
          #
          - build-type: full
            runs-on: ubuntu-20.04
            libclang-version: 11
            cxx-std: c++11
            optim-level: -O2
          #
          # Linux / g++-9 -std=c++14 / -O0 / standalone / separate compilation
          #
          - build-type: full
            runs-on: ubuntu-20.04
            libclang-version: 11
            cxx-std: c++14
            optim-level: -O0
          #
#
          - build-type: full
            runs-on: ubuntu-20.04
            libclang-version: 11
            cxx-std: c++03
            optim-level: -O0
          #

          # Linux / g++-6 / -O2 / standalone
    runs-on: ${{ matrix.runs-on }}
    env:
      CXX: clang++-${{ matrix.libclang-version }}
      CXXFLAGS: -std=${{ matrix.cxx-std }} ${{ matrix.optim-level }} -Wall -Wextra 
    steps:
    - uses: actions/checkout@v2
    - name: Install compiler
      if: startsWith(matrix.runs-on, 'ubuntu')
      run: |
        sudo apt install rapidjson-dev build-essential -y
        sudo apt-get install -y clang-${{ matrix.libclang-version }} libclang-${{ matrix.libclang-version }}-dev
    - name: Build
      if: startsWith(matrix.build-type, 'full')
      run: |
        mkdir build
        cd build
        cmake -DCMAKE_CXX_COMPILER=${CXX} ..
        make -j`nproc`


